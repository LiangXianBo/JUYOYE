plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}
//声明 获取签名配置 配置文件路径
def signPropertiesFile = rootProject.file("sign/key.properties")
if (signPropertiesFile.exists()) {
    localProperties.load(new FileInputStream(signPropertiesFile))
}

android {
    namespace "com.example.juyoye"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.juyoye"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        
        
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        minSdkVersion 21 //minSdkVersion flutter.minSdkVersion
        targetSdkVersion 34 //targetSdkVersion flutter.targetSdkVersion
        // multiDexEnabled true
    }
    signingConfigs{
        release{
            //如果秘钥库文件和配置文件存在就签名，否则不签名
                keyAlias localProperties['keyAlias']
                keyPassword localProperties['keyPassword']
                storeFile file(localProperties['storeFile'])
                storePassword localProperties['storePassword']
        }
    }
    // 自定义APK安装包名，只需更改outputFileName的拼接赋值
    // Android Studio 可以在控制台点击路径打开目录，不能点击则Run cd path
    // 输出路径：build/app/outputs/apk/debug/
    // 输出路径：build/app/outputs/apk/release/
    // 输出路径：build/app/outputs/apk/profile/
    println("Apk out info:")
    applicationVariants.all { variant ->
        variant.outputs.all { 
            def appName = 'JUYOYE(test)'
            def buildType = variant.buildType.name
            // 输入结果如：MyAppName-0.5.1-release.apk
            outputFileName = "${appName}-${defaultConfig.versionName}-${buildType}.apk"
            println("  L Terminal Run : cd "+ rootProject.buildDir + "/app/outputs/apk/${buildType}/" + "  file: ${outputFileName}")
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug

            // // 混淆
            // minifyEnabled true
            // // 去除无用res文件
            // shrinkResources true
            //'proguard-rules.pro'后面要创建的文件
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),'proguard-rules.pro' 
            //使用签名文件
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "androidx.multidex:multidex:2.0.1"
}
